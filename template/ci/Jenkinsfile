#! groovy

MAKE='make -f ci/Makefile'

node('docker') {

    currentBuild.displayName = "PR #${env.ghprbPullId}@${env.NODE_NAME}"
    configFileProvider([
        configFile(fileId: 'global', variable: 'GLOBAL'),
    ]) {
        global = load env.GLOBAL
    }

    stage('Checkout') {
        checkout scm
    }

    withEnv([
        "COMMIT_SHA=${env.ghprbActualCommit}",
        "IMAGE_TAG=${env.ghprbActualCommit.substring(0,8)}",
        "PROJECT_NAME={{Name}}-${env.BUILD_NUMBER}",
        "ROOTDIR=${global.HOST_WORKSPACE}"]) {
        try {
            stage('Unit tests') {
                ansiColor('xterm') {
                    sh("${MAKE} unit-test")
                }
            }

            stage('Build image') {
                sh("${MAKE} build")
            }

            stage('API tests') {
                try {
                    ansiColor('xterm') {
                        sh("${MAKE} api-test")
                    }
                } catch (Exception e) {
                    sh("docker-compose logs {{Name}}")
                    throw e
                }
            }

            stage('Validate test results') {
                junit "**/junit.xml"
                step([
                    $class: 'CoberturaPublisher',
                    autoUpdateHealth: false,
                    autoUpdateStability: false,
                    coberturaReportFile: 'coverage/coverage.xml',
                    failUnhealthy: true,
                    failUnstable: true,
                    maxNumberOfBuilds: 0,
                    onlyStable: false,
                    sourceEncoding: 'ASCII',
                    zoomCoverageChart: false,
                    lineCoverageTargets: '100.0, 90.0, 50.0',
                ])
            }
        } finally {
            stage ('Clean test environment') {
                sh("${MAKE} down")
            }
        }
    }
}

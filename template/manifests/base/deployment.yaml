apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{Name}}
  name: {{Name}}
spec:
  selector:
    matchLabels:
      app: {{Name}}
  template:
    metadata:
      labels:
        app: {{Name}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{Name}}
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {{Name}}
        image: {{Name}}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 512
        ports:
          - containerPort: 8081
        env:
          - name: ZING_PRODUCT_NAME
            valueFrom:
              configMapKeyRef:
                name: project-common
                key: PRODUCT_NAME
          - name: ZING_PRODUCT_VERSION
            valueFrom:
              configMapKeyRef:
                name: project-common
                key: PRODUCT_VERSION
          - name: ZING_PRODUCT_COMPANY_NAME
            valueFrom:
              configMapKeyRef:
                name: project-common
                key: COMPANY_NAME
          - name: ZING_PRODUCT_OTHER_COMMENTS
            valueFrom:
              configMapKeyRef:
                name: project-common
                key: PROJECT_ID
          - name: LISTEN_ADDR
            value: "0.0.0.0:8080"
          - name: {{replace Name "-" "_" -1 | toUpper}}_GCLOUD_PROJECT_ID
            valueFrom:
              configMapKeyRef:
                name: project-common
                key: PROJECT_ID
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/run/credentials/{{Name}}.json"
        resources:
          requests:
            cpu: 100m
            memory: 100M
        volumeMounts:
          - name: cred-secrets
            mountPath: /run/credentials
            readOnly: true
      volumes:
        - name: cred-secrets
          secret:
            secretName: {{Name}}
